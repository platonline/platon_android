apply plugin: 'com.android.library'

def buildProperties = new Properties()
buildProperties.load(new FileInputStream("$projectDir/build.properties"))

ext {
    bintrayRepo = 'platon_android_sdk'
    bintrayName = 'platon_android_sdk'

    publishedGroupId = 'com.platon.sdk'
    libraryName = 'platon_android_sdk'
    artifact = 'platon'

    libraryDescription = ''
    siteUrl = ''
    gitUrl = ''

    developerId = 'platon'
    developerName = 'Platonline'
    developerEmail = 'https://platon.ua'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}


ext {

    // Android
    androidMinSdkVersion = 16
    androidBuildSdkVersion = 28
    androidSupportVersion = '28.0.3'

    // Support
    appcompat_version = '1.1.0'

    // API
    okhttp = '3.8.1'
    retrofit = '2.3.0'
    googleWalletVersion = '18.0.0'
}

android {

    compileSdkVersion androidBuildSdkVersion
    buildToolsVersion androidSupportVersion

    defaultPublishConfig 'release' //expects a release variant

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidBuildSdkVersion
    }
}

dependencies {

    // Support
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    // API
    api "com.squareup.okhttp3:okhttp:$okhttp"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp"
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    api("com.google.android.gms:play-services-wallet:$googleWalletVersion")

    //For serialising JSONP add converter-scalars
    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'

}

ext {
    bintrayPropertiesFile = "${projectDir.absolutePath}/bintray.properties"
    libraryVersion = buildProperties['versionName']
}

apply from: "${project.rootDir}/bintrayUploader.gradle"